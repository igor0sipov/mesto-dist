(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._selectorsObject=e,this._currentForm=n,this._inputList=Array.from(n.querySelectorAll(this._selectorsObject.input))}var n,r;return n=t,(r=[{key:"_showError",value:function(e){this._errorElement=this._currentForm.querySelector(".".concat(e.id,"-error")),e.classList.add(this._selectorsObject.inputError),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._selectorsObject.errorVisible)}},{key:"_hideError",value:function(e){this._errorElement=this._currentForm.querySelector(".".concat(e.id,"-error")),e.classList.remove(this._selectorsObject.inputError),this._errorElement.textContent="",this._errorElement.classList.remove(this._selectorsObject.errorVisible)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_hasInpvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){var e=this._currentForm.querySelector(this._selectorsObject.submitButton);this._hasInpvalidInput()?(e.setAttribute("disabled","true"),e.classList.add(this._selectorsObject.inactiveButton)):(e.classList.remove(this._selectorsObject.inactiveButton),e.removeAttribute("disabled"))}},{key:"_setListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"validate",value:function(){var e=this;this._inputList.forEach((function(t){e._checkInputValidity(t),e._toggleButtonState()}))}},{key:"clear",value:function(){var e=this;this._inputList.forEach((function(t){e._hideError(t)}))}},{key:"enableValidation",value:function(){this._currentForm.addEventListener("submit",(function(e){e.preventDefault()})),this._setListeners()}}])&&e(n.prototype,r),t}(),n=document.querySelector(".profile__edit-button"),r=document.querySelector(".profile__name"),o=document.querySelector(".profile__bio"),i=document.querySelector(".profile__avatar"),a=document.querySelector(".profile__edit-avatar-button"),u=document.querySelector(".update-avatar"),c=document.forms.updateAvatar,s=document.querySelector(".confirm-delete"),l=document.querySelector(".edit-profile"),f=document.forms.editProfileForm,h=document.querySelector(".profile__add-button"),p=document.querySelector(".add-place"),d=document.forms.addPlaceForm,_=document.querySelector(".elements"),y=document.querySelector(".fullsize-picture"),v="86dbbabbe99c68a05ddfc98c",m={form:".form",input:".popup__input",submitButton:".popup__submit-button",inactiveButton:"popup__submit-button_disabled",inputError:"popup__input_type_error",errorVisible:"popup__input-error_visible"},b={cardTemplate:".card-template",card:".element",picture:".element__picture",title:".element__name",likeButton:".element__like-button",likeButtonActive:"element__like-button_active",deleteButton:".element__delete-button",hiddenDeleteButton:"element__delete-button_hidden",likeCounter:".element__like-counter"},k={openedPopup:"popup_opened",form:".form",closeButton:".popup__close-icon",title:"popup__title",picture:".popup__picture",input:".popup__input",submitButton:".popup__submit-button",caption:".popup__caption"};function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._selectors=n,this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add(this._selectors.openedPopup),document.addEventListener("keyup",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove(this._selectors.openedPopup),document.removeEventListener("keyup",this._handleEscClose)}},{key:"_closeByOverlay",value:function(e){e.target===e.currentTarget&&this.close()}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(this._selectors.closeButton).addEventListener("click",(function(){e.close()})),this._popup.addEventListener("click",(function(t){e._closeByOverlay(t)}))}}])&&g(t.prototype,n),e}();function C(e){return(C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function O(e,t,n){return(O="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function w(e,t){return(w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function L(e,t){return!t||"object"!==C(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function P(e){return(P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return L(this,e)});function a(e,t){var n,r=e.popup,o=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,r,t))._form=n._popup.querySelector(n._selectors.form),n._handleFormSubmit=o,n._submitButtonDefaultText=n._popup.querySelector(".popup__submit-button").textContent,n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=Array.from(this._form.querySelectorAll(this._selectors.input)),t={};return e.forEach((function(e){t[e.name]=e.value})),t}},{key:"setLoadingState",value:function(e){this._popup.querySelector(".popup__submit-button").textContent=e?"Cохранение...":this._submitButtonDefaultText}},{key:"_submitHandler",value:function(e){this.setLoadingState(!0),e.preventDefault();var t=this._getInputValues();this._handleFormSubmit(t)}},{key:"close",value:function(){O(P(a.prototype),"close",this).call(this),this._form.reset()}},{key:"setEventListeners",value:function(){O(P(a.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",this._submitHandler.bind(this))}}])&&E(t.prototype,n),a}(S);function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var q=function(){function e(t){var n=t.name,r=t.bio;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n,this._bio=r}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,bio:this._bio.textContent}}},{key:"setUserInfo",value:function(e){var t=e.newName,n=e.newBio;this._name.textContent=t,this._bio.textContent=n}}])&&B(t.prototype,n),e}();function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._token=t.token,this._userProfileUrl=t.userProfileUrl,this._cardsUrl=t.cardsUrl}var t,n;return t=e,(n=[{key:"_handleOriginalJsonResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"_handleOriginalResponse",value:function(e){return e.ok?e:Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserInfo",value:function(){return fetch(this._userProfileUrl,{headers:{authorization:this._token}}).then(this._handleOriginalJsonResponse).then((function(e){return e})).catch((function(e){console.log(e)}))}},{key:"getCards",value:function(){return fetch(this._cardsUrl,{headers:{authorization:this._token}}).then(this._handleOriginalJsonResponse).then((function(e){return e})).catch((function(e){console.log(e)}))}},{key:"editProfile",value:function(e){var t=e.name,n=e.about;return fetch(this._userProfileUrl,{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:t,about:n})}).then(this._handleOriginalJsonResponse).then((function(e){return e})).catch((function(e){console.log(e)}))}},{key:"addCard",value:function(e){var t=e.name,n=e.link;return fetch(this._cardsUrl,{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:t,link:n})}).then(this._handleOriginalJsonResponse).then((function(e){return e})).catch((function(e){console.log(e)}))}},{key:"deleteCard",value:function(e){return fetch(this._cardsUrl+e,{method:"DELETE",headers:{authorization:this._token}}).then(this._handleOriginalResponse).then((function(e){return e})).catch((function(e){console.log(e)}))}},{key:"like",value:function(e){return fetch(this._cardsUrl+"likes/"+e,{method:"PUT",headers:{authorization:this._token}}).then(this._handleOriginalJsonResponse).then((function(e){return e})).catch((function(e){console.log(e)}))}},{key:"removeLike",value:function(e){return fetch(this._cardsUrl+"likes/"+e,{method:"DELETE",headers:{authorization:this._token}}).then(this._handleOriginalJsonResponse).then((function(e){return e})).catch((function(e){console.log(e)}))}},{key:"updateAvatar",value:function(e){return fetch(this._userProfileUrl+"avatar/",{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:e})}).then(this._handleOriginalJsonResponse).then((function(e){return e})).catch((function(e){console.log(e)}))}}])&&I(t.prototype,n),e}();function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var U=function(){function e(t,n,r){var o=t.data,i=t.handleCardClick,a=t.handleLikeButtonClick,u=t.handleDeleteButtonClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._data=o,this._handleCardClick=i,this._handleLikeButtonClick=a,this._handleDeleteButtonClick=u,this._selectors=n,this._myId=r}var t,n;return t=e,(n=[{key:"_openFullsizePhoto",value:function(){this._handleCardClick({image:this._data.link,title:this._data.name})}},{key:"_getTemplate",value:function(){return document.querySelector(this._selectors.cardTemplate).content.cloneNode(!0)}},{key:"_like",value:function(e){e.classList.add(this._selectors.likeButtonActive)}},{key:"_removeLike",value:function(e){e.classList.remove(this._selectors.likeButtonActive)}},{key:"_getMyLike",value:function(e){var t=this;return e.likes.some((function(e){return e._id===t._myId}))}},{key:"_setEventListeners",value:function(e){var t=this;e.likeButton.addEventListener("click",(function(){t._like(e.likeButton),t._handleLikeButtonClick(t._data._id).then((function(n){t._getMyLike(n)?(t._like(e.likeButton),e.likeCounter.textContent=n.likes.length):(t._removeLike(e.likeButton),e.likeCounter.textContent=n.likes.length)}))})),e.deleteButton.addEventListener("click",(function(){t._handleDeleteButtonClick(t._data._id)})),e.picture.addEventListener("click",this._openFullsizePhoto.bind(this))}},{key:"initializeCard",value:function(){var e=this._getTemplate(),t={card:e.querySelector(this._selectors.card),picture:e.querySelector(this._selectors.picture),title:e.querySelector(this._selectors.title),likeButton:e.querySelector(this._selectors.likeButton),likeCounter:e.querySelector(this._selectors.likeCounter),deleteButton:e.querySelector(this._selectors.deleteButton)};return this._setEventListeners(t),t.picture.src=this._data.link,t.title.textContent=this._data.name,t.card.id=this._data._id,this._data.likes&&(t.likeCounter.textContent=this._data.likes.length),this._data.owner._id!==this._myId&&t.deleteButton.classList.add(this._selectors.hiddenDeleteButton),this._getMyLike(this._data)&&this._like(t.likeButton),e}}])&&T(t.prototype,n),e}();function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=n}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}}])&&x(t.prototype,n),e}();function D(e){return(D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function F(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function V(e,t,n){return(V="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=M(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function J(e,t){return(J=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function N(e,t){return!t||"object"!==D(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function M(e){return(M=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var H=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&J(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=M(r);if(o){var n=M(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return N(this,e)});function a(){return F(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"open",value:function(e,t){var n=this._popup.querySelector(this._selectors.picture),r=this._popup.querySelector(this._selectors.caption);n.src=e,r.textContent=t,n.alt=t,V(M(a.prototype),"open",this).call(this)}}])&&z(t.prototype,n),a}(S);function $(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var G=new R({token:"fe948c7b-c7fe-4065-b9c1-1b820e5df7d7",userProfileUrl:"https://mesto.nomoreparties.co/v1/cohort-17/users/me/",cardsUrl:"https://mesto.nomoreparties.co/v1/cohort-17/cards/"});Promise.all([G.getUserInfo(),G.getCards()]).then((function(e){var t,n,a=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var a,u=e[Symbol.iterator]();!(r=(a=u.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==u.return||u.return()}finally{if(o)throw i}}return n}}(t,n)||function(e,t){if(e){if("string"==typeof e)return $(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?$(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),u=a[0],c=a[1];r.textContent=u.name,o.textContent=u.about,i.src=u.avatar,ee(c)}));var K=new t(m,f);K.enableValidation();var Q=new t(m,d);Q.enableValidation();var W=new t(m,c);W.enableValidation();var X=new q({name:r,bio:o}),Y=new j({popup:l,handleFormSubmit:function(e){G.editProfile({name:e.name,about:e.bio}).then((function(){G.getUserInfo().then((function(e){X.setUserInfo({newName:e.name,newBio:e.about})})),Y.close(),Y.setLoadingState(!1)}))}},k);Y.setEventListeners();var Z=function(e){return new U({data:e,handleCardClick:function(e){var t=e.image,n=e.title;ne.open(t,n)},handleDeleteButtonClick:function(e){s.id=e,re.open()},handleLikeButtonClick:function(e){return G.getCards().then((function(t){var n=t.find((function(t){return t._id===e}));return n.likes.length>0&&n.likes.some((function(e){return e._id===v}))?G.removeLike(e):G.like(e)}))}},b,v)},ee=function(e){var t=new A({items:e,renderer:function(e){var n=Z(e).initializeCard();t.addItem(n)}},_);t.renderItems()},te=new j({popup:p,handleFormSubmit:function(e){G.addCard({name:e.title,link:e.url}).then((function(e){var t=Z(e).initializeCard();_.prepend(t),te.close(),te.setLoadingState(!1)}))}},k);te.setEventListeners();var ne=new H(y,k);ne.setEventListeners();var re=new j({popup:s,handleFormSubmit:function(){G.deleteCard(s.id).then((function(e){e.ok&&Array.from(document.querySelectorAll(".element")).find((function(e){return e.id===s.id})).remove(),re.close(),re.setLoadingState(!1)}))}},k);re.setEventListeners();var oe=new j({popup:u,handleFormSubmit:function(e){G.updateAvatar(e.avatar).then((function(){G.getUserInfo().then((function(e){i.src=e.avatar})),oe.close(),oe.setLoadingState(!1)}))}},k);oe.setEventListeners(),n.addEventListener("click",(function(){var e=X.getUserInfo();f.elements.name.value=e.name,f.elements.bio.value=e.bio,K.validate(),Y.open()})),h.addEventListener("click",(function(){Q.validate(),Q.clear(),te.open()})),a.addEventListener("click",(function(){W.validate(),W.clear(),oe.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,